			=============================================================
							1. int()
			=============================================================
=>int() is used for converting Any Possible Type of Value into int type value.
=>Syntax:        varname=int(float / bool / complex / str)
***************************************************************************************************************************************************
Example1: float type into int type--POSSIBLE
***************************************************************************************************************************************************
>>> a=12.34
>>> print(a,type(a))---------------------12.34 <class 'float'>
>>> b=int(a)
>>> print(b,type(b))--------------------12 <class 'int'>
>>> a=0.45
>>> print(a,type(a))--------------------0.45 <class 'float'>
>>> b=int(a)
>>> print(b,type(b))-------------------0 <class 'int'>
***************************************************************************************************************************************************
Example2: bool type into int type--POSSIBLE
***************************************************************************************************************************************************
>>> a=True
>>> print(a,type(a))----------------------True <class 'bool'>
>>> b=int(a)
>>> print(b,type(b))---------------------1 <class 'int'>
>>> a=False
>>> print(a,type(a))--------------------False <class 'bool'>
>>> b=int(a)
>>> print(b,type(b))-------------------0 <class 'int'>
***************************************************************************************************************************************************
Example3: complex type into int type----NOT POSSIBLE
***************************************************************************************************************************************************
>>> a=2+3.5j
>>> print(a,type(a))-----------------(2+3.5j) <class 'complex'>
>>> b=int(a)-----------TypeError: int() argument must be a string not 'complex'
***************************************************************************************************************************************************
Example: str type into int type
***************************************************************************************************************************************************
Case-1:  str int into  int----POSSIBLE
----------------------------------------------------------------------------------------
>>> a="123"
>>> print(a,type(a))--------------123 <class 'str'>
>>> b=int(a)
>>> print(b,type(b))--------------123 <class 'int'>
----------------------------------------------------------------------------------------
Case-2: str float into  int---NOT POSSIBLE
----------------------------------------------------------------------------------------
>>> a="12.34"
>>> print(a,type(a))------------------12.34 <class 'str'>
>>> b=int(a)--------------------------ValueError: invalid literal for int() with base 10: '12.34'
----------------------------------------------------------------------------------------
Case-3: str bool  into int-----NOT POSSIBLE
----------------------------------------------------------------------------------------
>>> a="True"
>>> print(a,type(a))-----------True <class 'str'>
>>> b=int(a)--------------------ValueError: invalid literal for int() with base 10: 'True'
----------------------------------------------------------------------------------------
Case-4: str complex into int--Not POSSIBLE
----------------------------------------------------------------------------------------
>>> a="2+3j"
>>> print(a,type(a))--------------2+3j <class 'str'>
>>> b=int(a)------------------------ValueError: invalid literal for int() with base 10: '2+3j'
----------------------------------------------------------------------------------------
Case-5: pure str into int--NOT POSSIBLE
----------------------------------------------------------------------------------------
>>> a="PYTHON"
>>> print(a,type(a))--------------------PYTHON <class 'str'>
>>> b=int(a)-------------------------ValueError: invalid literal for int() with base 10: 'PYTHON'
>>>

----------------------------------------------------------------------------------------
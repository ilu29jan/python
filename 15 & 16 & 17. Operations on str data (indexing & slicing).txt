			=============================================================
						Operations on str data
			=============================================================
=>On str data, we can perform Two Types of Operations. They are

			1. Indexing
			2. Slicing
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. Indexing
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
=>The Process of Obtaining Single Value from given str object by passing Valid Index is called Indexing.
=>Syntax:    strobj[ Index ]
=>Here strobj is an object of <class, 'str'>
=>Here Index Represents Either +ve Index or -Ve Index
=>If we enter Valid Index then we get Corresponding Value of that Index from str obj
=>If we enter Invalid Index then we get IndexError
----------------------------------------
Examples
----------------------------------------
>>> s="PYTHON"
>>> print(s[0])----------------------------P
>>> print(s[1])----------------------------Y
>>> print(s[3])----------------------------H
>>> print(s[4])----------------------------O
>>> print(s[-1])---------------------------N
>>> print(s[-6])---------------------------P
>>> print(s[-2])---------------------------O
>>> print(s[-4])---------------------------T
>>> print(s[10])-------------------------IndexError: string index out of range
>>> print(s[-10])-----------------------IndexError: string index out of range
-----------------------------------------------------
>>> s="PYTHON"
>>> s[0]------------------------------'P'
>>> len(s)-1 ------------------------5
>>> s[len(s)-1]---------------------'N'
>>> s[-1]-----------------------------'N'
>>> s[-len(s)]-----------------------'P'
>>> s[len(s)]------------------------IndexError: string index out of range
--------------------------------------------------
>>> "HYDERABAB"[-1]---------------'B'
>>> "HYDERABAB"[0]----------------'H'
>>> "HYDERABAB"[len("HYDERABAD")-1]--------'B'
>>> "HYDERABAB"[-len("HYDERABAD")]--------'H'
>>> "HYDERABAB"[len("HYDERABAD")]---------IndexError: string index out of range
---------------------------------------------------------
>>> "JAVA PROG"[False]----------------'J'
>>> "JAVA PROG"[True]-----------------'A'
>>> "JAVA PROG"[0b100]-------------' '
>>> "JAVA PROG"[0b100+1]----------'P'
>>> "JAVA PROG"[-1]--------------------'G'
>>> "JAVA PROG"[3]--------------------'A'
>>> "JAVA PROG"[0xF]----------------IndexError: string index out of range
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2. Slicing
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
=>The Process of Obtaining Range of Values OR Sub String  either Forward Direction or in Backward Direction from Main String is Called Slicing.
=>To Perform Slicing Operations, we have 5 Syntaxes. They are
**************************************************************************************************************************************************
Syntax-1:   strobj[Begin:End]
**************************************************************************************************************************************************
=>This Syntax generates range of Chars/Values from BEGIN to END-1 Index provided BEGIN<END Otherwise we get No Result 
    OR Space as a Result.
----------------------
Examples-1
----------------------
>>> s="PYTHON"
>>> print(s,type(s))--------------------PYTHON <class 'str'>
>>> s[0:4]--------------------------------'PYTH'
>>> print(s[0:4])------------------------PYTH
>>> s[4:0]--------------------------------' '  due to 4<0  False
>>> print(s[4:0])-----------------------  NO Result   due to 4<0  False
>>> s[0:6]-------------------------------'PYTHON'
>>> s[2:6]------------------------------'THON'
>>> s[2:4]------------------------------'TH'
>>> s[1:5]------------------------------'YTHO'
>>> s[3:6]------------------------------'HON'
>>> s[4:6]------------------------------'ON'
>>> s[3:5]------------------------------'HO'
------------------------------
>>> s="PYTHON"
>>> print(s,type(s))--------------PYTHON <class 'str'>
>>> s[-5:-2]------------------------'YTH'
>>> s[-2:-5]------------------------'  '
>>> print(s[-2:-5])---------------No Result
>>> s[-6:-1]-----------------------'PYTHO'
>>> s[-5:-1]------------------------'YTHO'
>>> s[-4:-1]------------------------'THO'
>>> s[-3:-1]------------------------'HO'
>>> s[-6:-3]------------------------'PYT'
>>> s[-6:-2]------------------------'PYTH'
>>> s[-4:-2]------------------------'TH'
>>> s[-5:-4]------------------------'Y'
*******************************************
Special SUB POINTS (Begin<End) Rule Become Silence
******************************************
>>> s="PYTHON"
>>> print(s,type(s))------------PYTHON <class 'str'>
>>> s[0:-4]-----------------------'PY'
>>> s[2:-1]-----------------------'THO'
>>> s[0:-1]-----------------------'PYTHO'
>>> s[4:-1]-----------------------'O'
>>> s[2:-1]------------------------'THO'
>>> s[-6:5]------------------------'PYTHO'
>>> s[-6:6]-------------------------'PYTHON'
>>> s[-5:5]-------------------------'YTHO'
>>> s[-4:5]-------------------------'THO'
>>> s[-6:3]-------------------------'PYT'
>>> s[-4:6]-------------------------'THON'
>>> s[-3:6]-------------------------'HON'
*******************************************
MOST Special SUB POINTS (Begin<End) Rule Become Silence
******************************************
>>> s="PYTHON"
>>> print(s)---------------------PYTHON
>>> s[0:100]--------------------'PYTHON'
>>> s[2:99]----------------------'THON'
>>> s[3:10]----------------------'HON'
>>> s[2:45]----------------------'THON'
>>> s[45:2]----------------------''
>>> s[-10:-1]--------------------'PYTHO'
>>> s[-1000:-3]-----------------'PYT'
>>> s[-100:-1]-------------------'PYTHO'
>>> s[-10:-4]--------------------'PY'
>>> s[-10:-5]--------------------'P'
>>> s[-10:-6]--------------------''
------------------------------------
>>> s="PYTHON"
>>> print(s)----------------------PYTHON
>>> s[-1000:-1]----------------'PYTHO'
>>> s[-1000:0]----------------''
>>> s[-4:0]---------------------''
>>> s[-5:2]----------------------'Y'
>>> s[-5:1]----------------------''
>>> s[2:-7]---------------------''
>>> s[3:-5]---------------------''
>>> s[3:-2]---------------------'H'
>>> s[-100:100]---------------'PYTHON'
>>> s[0:-99]---------------------''
>>> s[-1:100]-------------------'N'
>>> s[-2:100]-------------------'ON'
>>> s[1000:2000]--------------''
>>> s[-1000:-2000]-----------''
>>> s[-2000:-1000]----------''
**************************************************************************************************************************************************
Syntax-2:   strobj[Begin:  ]
**************************************************************************************************************************************************
=>In This Syntax, we Specified  BEGIN Index and we did't not specify END Index
=>If we don't specify END Index then PVM Takes The characters from BEGIN Index to strobj[len(strobj)-1].
			(OR)
=>If we don't specify END Index then PVM Takes The characters from BEGIN Index to Last Character Index
---------------------------
Examples
---------------------------
>>> s="PYTHON"
>>> print(s)---------------PYTHON
>>> s[2:]-------------------'THON'
>>> s[3:]-------------------'HON'
>>> s[0:]------------------'PYTHON'
>>> s[4:]------------------'ON'
>>> s[3:]-------------------'HON'
-----------------
>>> s="PYTHON"
>>> print(s)------------------PYTHON
>>> s[-6:]---------------------'PYTHON'
>>> s[-5:]---------------------'YTHON'
>>> s[-3:]---------------------'HON'
>>> s[-4:]---------------------'THON'
>>> s[-2:]---------------------'ON'
------------------------
>>> s="PYTHON"
>>> print(s)--------------------PYTHON
>>> s[-1000:]-----------------'PYTHON'
>>> s[-10:]--------------------'PYTHON'
>>> s[10:]---------------------''
>>> s[6:]----------------------''
>>> s[5:]---------------------'N'
>>> s[-1:]--------------------'N'
**************************************************************************************************************************************************
Syntax-3:   strobj[  : End]
**************************************************************************************************************************************************
=>In This Syntax, we Specified  END Index and we did't not specify BEGIN Index
=>If we don't specify BEGIN Index then PVM Takes BEGIN Index as 0 or -len(strobj) to END-1 Index
				(OR)
=>If we don't specify BEGIN Index then PVM Takes The characters from First Charcater to END-1 Index
-----------------------------
Examples
-----------------------------
>>> s="PYTHON"
>>> s[:5]-------------------------'PYTHO'
>>> s="PYTHON"
>>> s[:4]------------------------'PYTH'
>>> s[:4]------------------------'PYTH'
>>> s[:5]-------------------------'PYTHO'
>>> s[:6]-------------------------'PYTHON'
>>> s[:600]---------------------'PYTHON'
>>> s[:-1]-----------------------'PYTHO'
>>> s[:-3]-----------------------'PYT'
>>> s[:-5]-----------------------'P'
>>> s[:-2]-----------------------'PYTH'
>>> s[:700]---------------------'PYTHON'
>>> s[:-100]--------------------' '
>>> s[:-450]--------------------' '
**************************************************************************************************************************************************
Syntax-4:   strobj[ : ]
**************************************************************************************************************************************************
=>In this Syntax, we did't specify BEGIN and END Index.
=>If we don't specify BEGIN and END Indices then PVM Takes From First Character to Last Character.
-----------------------
Examples
-----------------------
>>> s="PYTHON"
>>> print(s)----------------------PYTHON
>>> s[:]----------------------------'PYTHON'
>>> s="PYTHON PROGRAMMING"
>>> s[:]---------------------------'PYTHON PROGRAMMING'
>>> "JAVA"[:]-------------------'JAVA'
>>> "JAVA"[0:]------------------'JAVA'
>>> "JAVA"[:100]---------------'JAVA'
>>> "JAVA"[-100:100]---------'JAVA'
>>> "JAVA"[-100:]--------------'JAVA'
>>> "JAVA"[:]--------------------'JAVA'
=>NOTE: In Syntax-1,Syntax-2,Syntax-3 and Syntax-4, we are getting the Data from Str object in FORWARD DIRECTION by 
               maintaining DEFAULT STEP +1
**************************************************************************************************************************************************
Syntax-5:   strobj[Begin:End:Step]
**************************************************************************************************************************************************
Rule-1: Here the Values  of BEGIN,END and STEP can be either +VE or -VE

Rule-2: If the Value of STEP is +VE then PVM gets the Values / Chars from str obj from BEGIN to END-1 Index  in FORWARD ---------  DIRECTION Provided BEGIN < END otherwise we get Space OR No Result Output as result.

Rule-3: If the Value of STEP is -VE then PVM get the Values / Chars from str obj from BEGIN to END+1 Index in BACKWARD 
----------- DIRECTION provided BEGIN>END otherwise we get Space OR No Result Output as result.

Rule-4: In FORWARD DIRECTION if we specify END Index as 0 then we never get any result OR we get Space as Result
------------
Rule-5:   In BACKWARD DIRECTION if we specify END Index as -1 then we never get any result OR we get Space as Result
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Examples--RULE-2
-----------------------------------
>>> s="PYTHON"
>>> s[:]------------------'PYTHON'
>>> s[::]------------------'PYTHON'
>>> s[::2]-----------------'PTO'
>>> s[::3]-----------------'PH'
>>> s[::4]----------------'PO'
>>> s[::5]----------------'PN'
>>> s[::6]-----------------'P'
>>> s[::600]--------------'P'
>>> #-------------------------------
>>> s="PYTHON"
>>> s[0:6:2]------------------'PTO'
>>> s[2:6:2]------------------'TO'
>>> s[1:5:3]-----------------'YO'
>>> s[0::2]--------------------'PTO'
>>> s[:6:4]--------------------'PO'
>>> "HYDERABAD"[::2]------'HDRBD'
************************************************
Examples--RULE-3
----------------------------------------------------------
>>> s="PYTHON"
>>> print(s)------------------------PYTHON
>>> s[::-1]--------------------------'NOHTYP'
>>> "HYDERABAD"[::-1]----------'DABAREDYH'
>>> "LIRIL"[::-1]---------------------'LIRIL'
>>> "MALAYALAM"[::-1]------------'MALAYALAM'
>>> "MOM"[::-1]----------------------'MOM'
>>> "DAD"[::-1]-----------------------'DAD'
>>> "MADAM"[::-1]-------------------'MADAM'
>>> "RACECAR"[::-1]---------------'RACECAR'
>>> "8558"[::-1]----------------------'8558'
>>> #------------------------------------------------
>>> s="PYTHON"
>>> print(s)---------------------------PYTHON
>>> s[1:6:-1]-------------------------''
>>> s[5:1:-1]-------------------------'NOHT'
>>> s[4:0:-1]------------------------'OHTY'
>>> s[5:0:-2]------------------------'NHY'
>>> s[5:0:-3]-----------------------'NT'
>>> s[4::-2]-------------------------'OTP'
>>> #---------------------------------------------------
>>> s="PYTHON"
>>> print(s)--------------------------PYTHON
>>> s[-6:-1:-1]-----------------------''
>>> s[-6:-1:]-------------------------'PYTHO'
>>> s[-1:-6:-1]-----------------------'NOHTY'
>>> s[-1:-7:-1]-----------------------'NOHTYP'
>>> s[-1:-7:-2]------------------------'NHY'
>>> s[-2:-6:-3]------------------------'OY'
>>> s[-2:-6:-4]--------------------------'O'
>>> s[-1:-5:-1]--------------------------'NOHT'
>>> #------------------------------------------------
>>> s="PYTHON"
>>> print(s)
PYTHON
>>> s[-1000:-2000:-1]
''
>>> s[2000:1000:-1]
''
>>> s[-1000::-1]
''
>>> s[:-1000:-1]
'NOHTYP'
>>> #-----------------------------------
>>> s="PYTHON"
>>> print(s)
PYTHON
>>> s[-5:5:-1]
''
>>> s[0:1000:-1]
''
>>> s[-500:-600:-1]
''
>>> s[-1:-600:-2]
'NHY'
***********************************************
>>> s="PYTHON"
>>> s[-2::-2][::-1]
'PTO'
>>> s[::2][::-1]
'OTP'
>>> s[::-1][::-2]
'PTO'
>>> s[::-1]
'NOHTYP'
>>> 'NOHTYP'[::-2]
'PTO'
>>>
>>>
>>> "LIRIL"[0:3][::-1]
'RIL'
>>> "NISSON"[2:][::-1]
'NOSS'
*****************************************
>>> "JAVA"[::True][::-True]------------------'AVAJ'
>>> "JAVA"[::-True][::False]---------------ValueError: In slice Operation,  step cannot be zero
>>> "PYTHON"[::0]---------------------------ValueError: slice step cannot be zero
***********************************************************
Examples  for RULE-4
-------------------------------------------------------------------
>>> s="PYTHON"
>>> s[:0]
''
>>> s[:0:1]
''
>>> s[:0:2]
''
>>> s[:0:3]
''
***********************************************************
Examples  for RULE-5
-------------------------------------------------------------------
>>> s="PYTHON"
>>> s[:-1:-1]----------------------------''
>>> s[:-1:-2]---------------------------''
>>> s[:-1:-3]--------------------------''
>>> s[:-1:-4]-------------------------''
>>> "HYDERABAD"[:-1:-2]-----''
>>> "HYDERABAD"[:-1:-3]-----''
>>> "HYDERABAD"[:-1:-True]-----''
**********************************************************************************************************************************

